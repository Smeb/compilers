import java_cup.runtime.*;
import java.util.ArrayList;

parser code {:

  public Boolean syntaxErrors = false;

  public void syntax_error(Symbol current_token){
  report_error("Syntax error at line " + (current_token.left+1) +
  ", column " + current_token.right + "\n", null);
  }
  private Lexer lexer;

  public Parser(Lexer lex) {
    super(lex);
    lexer = lex;
  }

:}

terminal BADCHAR;
/** primitives **/
  /* syntactic smybols */
  terminal LANGLE, RANGLE, LBRACKET, RBRACKET, COMMA;
  /* items */
  terminal BOOL, CHAR, FLOAT, INTEGER, RATIONAL;
  /* collections */
  terminal STRING_LITERAL;
  /* language types */
  terminal SEQ_T;

/** parsing constructs **/
  /* low level constructs */
  nonterminal collection, item, type;
  nonterminal expression;
  /* collection implementors */
  nonterminal sequence_decl, sequence_start, sequence_body; /* dict_decl, dict_body; */

expression ::= item
            | collection
            ;

item ::= CHAR | FLOAT | INTEGER | RATIONAL | BOOL;
collection ::= STRING_LITERAL;
sequence_decl ::= SEQ_T LBRACKET type RBRACKET;
type ::= SEQ_T;

sequence_start ::= sequence_body
                |
                ;

sequence_body ::= sequence_body COMMA expression
                | expression
                ;
